[
["index.html", "gRRRafika 1 WPROWADZENIE 1.1 DANE 1.2 MATERIAŁY (CHEATSHEETS) 1.3 WWW", " gRRRafika BORUCINO, 27.06.2018 Ostatnie zmiany:2018-06-27 1 WPROWADZENIE 1.1 DANE am8_jittered.rda Pobierz plik (2.9MB) Godzinne stężenia PM10 oraz wartości elementów meteo na stacji AM8 (ARMAAG). W celach dydaktycznych zostały on zaszumione (jittered) 1.2 MATERIAŁY (CHEATSHEETS) 1.3 WWW R for Data Science Rozszerzenia do ggplot2 Function Reference "],
["grafika-base.html", "2 Grafika BASE 2.1 Wczytanie danych 2.2 Pusty wykres 2.3 Wykres kolumnowy 2.4 HISTOGRAM 2.5 WYKRES LINIOWY 2.6 BOX-PLOTS 2.7 ZAPISYWANIE", " 2 Grafika BASE 2.1 Wczytanie danych load(file = &quot;am8_jittered.rda&quot;) 2.2 Pusty wykres Zanim zaczniemy przygotowywać wykresy kilka słów na temat technikalów związanych z kreśleniem wykresów plot(0 , xlim = c(0, 10), # zakres osi x ylim = c(-3, 5), # zakres osi y # xaxt=&quot;n&quot;, # włączenie wyłącza oś x # yaxt=&#39;n&#39;, # włączenie wyłącza oś y main = &quot;&quot;, # tytuł wykresu ylab = &quot;&quot;, # tytul osi y xlab = &quot;&quot; # tytuł osi x ) box(lwd = 2) Uzupełnijmy osie i tytuły plot(0, 3, xlim = c(0, 10), # zakres osi x ylim = c(-3, 5), # zakres osi y type = &quot;n&quot;, # tyn wykresu, wpisane n nie wyświetla punktów # xaxt=&quot;n&quot;, # włączenie wyłącza oś x # yaxt=&quot;n&quot;, # włączenie wyłącza oś y main = &quot;Przykładowy wykres&quot;, # tytuł wykresu ylab = &quot;Oś X&quot;, # tytul osi y xlab = &quot;Oś Y&quot;, # tytuł osi x las = 1 # obrót etykiet osi (ustalone na poziomo) ) box(lwd = 2) 2.3 Wykres kolumnowy Najczęściej dotyczy prezentowania częstości. Zatem przygotujmy dane odzwierciedlające częstość przekraczania dobowych norm PM10 na stacji am8 library(dplyr) library(tidyr) library(lubridate) drop_na(am8) %&gt;% group_by(DATE) %&gt;% summarize(PM10d = mean(PM10)) %&gt;% mutate(PM10ex = ifelse(PM10d&gt;50, 1, 0)) -&gt; df df$MONTH = lubridate::month(df$DATE) table = table(df$PM10ex, df$MONTH) barplot(table[ 2, ], ylim = c(0, 30), xlab = &quot;MIESIĄC&quot;, ylab = &quot;Częstość przekroczeń PM10&quot;, las = 1) box(lwd = 2) barplot(prop.table(table[ 2:1, ], margin = 2)) box(lwd = 2) barplot(prop.table(table[ 2:1, ], margin = 2)[1, ], ylim = c(0, 0.20), las = 1, xlab = &quot;MIESIĄC&quot;, ylab = &quot;Częstość&quot;, main = &quot;Odsetek (%) dni z przekroczeniem normy PM10 na stacji AM8&quot;) box(lwd = 2) 2.4 HISTOGRAM hist(df$PM10d, main = &quot;Stężenia PM10 na stacji AM8&quot;, col = &quot;orange&quot;, xlab = &quot;PM10&quot;) Można porównywac stężenia np dla róznych miesięcy hist(df$PM10d[which(df$MONTH == 1)], main = &quot;Stężenia PM10 na stacji AM8&quot;, col = &quot;orange&quot;, xlab = &quot;PM10&quot;) hist(df$PM10d[which(df$MONTH == 6)], main = &quot;Stężenia PM10 na stacji AM8&quot;, col = &quot;black&quot;, xlab = &quot;PM10&quot;, add = T) hist(df$PM10d[which(df$MONTH == 1)], prob = TRUE, main = &quot;Stężenia PM10 na stacji AM8&quot;, col = &quot;orange&quot;, xlab = &quot;PM10&quot;) hist(df$PM10d[which(df$MONTH == 6)], prob = TRUE, main = &quot;Stężenia PM10 na stacji AM8&quot;, col = &quot;black&quot;, xlab = &quot;PM10&quot;, add = T) hist(df$PM10d[which(df$MONTH == 1)], prob = TRUE, breaks = seq(0, 140, 10), main = &quot;Stężenia PM10 na stacji AM8&quot;, col = rgb(0, 0, 0, 0.5), xlab = &quot;PM10&quot;) hist(df$PM10d[which(df$MONTH == 6)], prob = TRUE, breaks = seq(0, 140, 10), main = &quot;Stężenia PM10 na stacji AM8&quot;, col = rgb(1, 0, 0, 0.5), xlab = &quot;PM10&quot;, add = T) hist(df$PM10d[which(df$MONTH == 1)], ylim = c(0, 0.1), prob = TRUE, breaks = seq(0, 140, 10), main = &quot;Stężenia PM10 na stacji AM8&quot;, col = rgb(0, 0, 0, 0.5), xlab = &quot;PM10&quot;) hist(df$PM10d[which(df$MONTH == 6)], prob = TRUE, breaks = seq(0, 140, 10), main = &quot;Stężenia PM10 na stacji AM8&quot;, col = rgb(1, 0, 0, 0.5), xlab = &quot;PM10&quot;, add = T) legend(&quot;topright&quot;, c(&quot;STYCZEŃ&quot;, &quot;CZERWIEC&quot;), fill = c(rgb(0, 0, 0, 0.5), rgb(1, 0, 0, 0.5)) ) box(lwd = 2) 2.5 WYKRES LINIOWY Załóżmy, że interesuja nas styczniowe przebiegi stężeń PM10 przedstawione jako cykl dobowy. Obliczmy je zatem i przedstawwy za pomocą wykresu liniowego. Zaczynamy od przygotowania danych drop_na(am8) %&gt;% filter(MONTH == 1) %&gt;% group_by(HOUR) %&gt;% summarize(PM10ave = mean(PM10), PM10sd = sd(PM10))-&gt; df head(df, 15) ## # A tibble: 15 x 3 ## HOUR PM10ave PM10sd ## &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 0 32.6 25.9 ## 2 1 31.7 31.8 ## 3 2 29.0 32.1 ## 4 3 26.3 32.0 ## 5 4 23.8 23.6 ## 6 5 23.2 26.0 ## 7 6 22.2 21.1 ## 8 7 22.0 19.4 ## 9 8 23.9 20.5 ## 10 9 27.5 22.5 ## 11 10 30.5 23.8 ## 12 11 29.0 21.8 ## 13 12 26.9 19.3 ## 14 13 25.8 17.3 ## 15 14 25.1 19.2 plot(df$HOUR, df$PM10ave, type = &quot;b&quot;, xlim = c(0,23), xlab = &quot;GODZINA&quot;, ylab = &quot;Stężenie PM10&quot;, las = 1) box(lwd = 2) Załóżmy że interesuja nas takie przebiegi dla poszczególnych miesięcy i dodatkowo chcielibyśmy je umieścic na jednym wykresie. Możemy wówczas dodac kilka linii kodu aby R policzył to za nas i co więcej ładnie rozmieścił i narysował par(mfrow = c(3,4)) for(i in 1:12){ drop_na(am8) %&gt;% filter(MONTH == i) %&gt;% group_by(HOUR) %&gt;% summarize(PM10ave = mean(PM10), PM10sd = sd(PM10))-&gt; df plot(df$HOUR, df$PM10ave, type = &quot;b&quot;, xlim = c(0,23), xlab = &quot;GODZINA&quot;, ylab = &quot;Stężenie PM10&quot;, las = 1) mtext(i) box(lwd = 2) } par(mfrow = c(3,4), mar = c(1, 1, 3, 1), oma = c(3, 4, 0, 0)) for(i in 1:12){ drop_na(am8) %&gt;% filter(MONTH == i) %&gt;% group_by(HOUR) %&gt;% summarize(PM10ave = mean(PM10), PM10sd = sd(PM10))-&gt; df plot(df$HOUR, df$PM10ave, type = &quot;b&quot;, xlim = c(0,23), # xlab = &quot;GODZINA&quot;, # ylab = &quot;Stężenie PM10&quot;, #xaxt= &quot;n&quot;, #yaxt= &quot;n&quot;, las = 1, ylab = &quot;&quot;, # tytul osi y xlab = &quot;&quot;) # tytuł osi x mtext(i, side = 3, line = 0.5) box(lwd = 2) } mtext(&quot;GODZINA&quot;, side = 1, line = 2, outer = TRUE) mtext(&quot;Stężenie PM10&quot;, side = 2, line = 2, outer = TRUE) 2.6 BOX-PLOTS drop_na(am8) %&gt;% group_by(DATE) %&gt;% summarize(PM10ave = mean(PM10)) %&gt;% mutate(MONTH = lubridate::month(DATE)) -&gt; pm10d boxplot(pm10d$PM10ave~pm10d$MONTH, xlab = &quot;MIESIĄC&quot;, ylab = &quot;PM10&quot;) abline(h = 50, col = 2) box(lwd = 2) boxplot(pm10d$PM10ave~pm10d$MONTH, outline=FALSE, xlab = &quot;MIESIĄC&quot;, ylab = &quot;PM10&quot;) abline(h = 50, col = 2) 2.7 ZAPISYWANIE jpeg(filename=&quot;boxplot.jpeg&quot;,width = 3500, height = 2400, units = &quot;px&quot;, pointsize = 24, quality=100, res=150) boxplot(pm10d$PM10ave~pm10d$MONTH, outline=FALSE, xlab = &quot;MIESIĄC&quot;, ylab = &quot;PM10&quot;) abline(h = 50, col = 2) box(lwd = 2) dev.off() ## png ## 2 "],
["ggplot2.html", "3 GGPLOT2 3.1 PIERWSZY WYKRES (PUSTY) 3.2 HISTOGRAM 3.3 WYKRES KOLUMNOWY 3.4 BOXPLOT 3.5 WYKRES ROZRZUTU 3.6 WYKRES LINIOWY 3.7 ZAPISYWANIE", " 3 GGPLOT2 Wczytujemy biblioteki library(dplyr) library(ggplot2) library(lubridate) library(ggpubr) library(tidyr) Załóżmy, że interesuje nas rozkład stężeń PM10 na stacji am8. Oczywistym wyborem jest tutaj histogram. Na tym przykładzie omówimy podtawy składni ggplot2 Przygotujmy dobowe stężenia drop_na(am8) %&gt;% group_by(DATE) %&gt;% summarize(PM10d = mean(PM10), TEMPmd = min(TEMP), VELd = mean(VEL), PRESSd = mean(PRESS)) %&gt;% mutate(YEAR = lubridate::year(DATE), MONTH = lubridate::month(DATE), DAYy = lubridate::yday(DATE)) -&gt; am8d 3.1 PIERWSZY WYKRES (PUSTY) ggplot(am8d, aes(x = PM10d)) 3.2 HISTOGRAM ggplot(am8d, aes(x = PM10d)) + geom_histogram(aes(y = ..density..), fill = &quot;gold3&quot;) Dodajmy gęstość (Gauss kernel density) ggplot(am8d, aes(x = PM10d)) + geom_histogram(aes(y = ..density..), fill = &quot;gold3&quot;) + geom_density(lwd = 1, adjust = 1) Uzupełnijmy wykres o opisy ggplot(am8d, aes(x = PM10d)) + geom_histogram(aes(y = ..density..), fill = &quot;gold3&quot;) + geom_density(lwd = 1, adjust = 1)+ labs( title = &quot;Stężenia PM10 na stacji AM8 &quot;, subtitle = &quot;2010-2015&quot;, caption = &quot;Data from ARMAAG - modified (jittered)&quot;, x = &quot;PM10&quot;, y = &quot;PDF&quot; ) Zmieńmy na jeden z dostępnych schematów kolorowania ggplot(am8d, aes(x = PM10d)) + geom_histogram(aes(y = ..density..), fill = &quot;gold3&quot;) + geom_density(lwd = 1, adjust = 1)+ labs( title = &quot;Stężenia PM10 na stacji AM8 &quot;, subtitle = &quot;2010-2015&quot;, caption = &quot;Data from ARMAAG - modified (jittered)&quot;, x = &quot;PM10&quot;, y = &quot;PDF&quot; ) + theme_bw() 3.3 WYKRES KOLUMNOWY drop_na(am8) %&gt;% group_by(DATE) %&gt;% summarize(PM10d = mean(PM10)) %&gt;% mutate(PM10ex = ifelse(PM10d&gt;50, 1, 0)) -&gt; df df$MONTH = lubridate::month(df$DATE) table = table(df$PM10ex, df$MONTH) table ## ## 1 2 3 4 5 6 7 8 9 10 11 12 ## 0 167 136 167 176 185 172 171 178 172 177 164 172 ## 1 19 29 19 2 1 0 0 0 1 8 15 14 table = round(prop.table(table, margin = 2), digits = 3) table ## ## 1 2 3 4 5 6 7 8 9 10 11 ## 0 0.898 0.824 0.898 0.989 0.995 1.000 1.000 1.000 0.994 0.957 0.916 ## 1 0.102 0.176 0.102 0.011 0.005 0.000 0.000 0.000 0.006 0.043 0.084 ## ## 12 ## 0 0.925 ## 1 0.075 table = as.data.frame(table) names(table) = c(&quot;EX&quot;, &quot;MC&quot;, &quot;FREQ&quot;) table %&gt;% filter(EX == 1) %&gt;% ggplot(., aes(x = MC, y = FREQ, fill = EX))+ geom_bar(stat = &quot;identity&quot;) + guides(fill=FALSE) # usuwanie legendy dla konkretnego mapowania 3.4 BOXPLOT ggplot(am8d, aes(x = as.factor(MONTH), y = PM10d))+ geom_boxplot(outlier.shape = NA) + ylim(c(0, 100)) + labs( title = &quot;Dobowe stężenia PM10 na stacji AM8&quot;, subtitle = &quot;2010-2015&quot;, caption = &quot;Data from ARMAAG - modified (jittered)&quot;, x = &quot;MIESIĄC&quot;, y = &quot;PM10&quot; ) ## Warning: Removed 9 rows containing non-finite values (stat_boxplot). Zastosujmy własne charakterystyki f &lt;- function(x) { r &lt;- quantile(x, probs = c(0.1, 0.25, 0.5, 0.75, 0.9), na.rm = T) names(r) &lt;- c(&quot;ymin&quot;, &quot;lower&quot;, &quot;middle&quot;, &quot;upper&quot;, &quot;ymax&quot;) r } ggplot(am8d, aes(x = as.factor(MONTH), y = PM10d)) + stat_summary(fun.data = f, geom=&quot;errorbar&quot;, width = 0.3) + stat_summary(fun.data = f, geom=&quot;boxplot&quot;) + #scale_x_discrete(labels=c(&quot;Jan&quot;,&quot;Feb&quot;,&quot;Mar&quot;,&quot;Apr&quot;,&quot;May&quot;,&quot;Jun&quot;,&quot;Jul&quot;,&quot;Aug&quot;,&quot;Sep&quot;,&quot;Oct&quot;,&quot;Nov&quot;,&quot;Dec&quot;))+ labs( title = &quot;Steżenia PM10 na stacji AM8&quot;, subtitle = &quot;2010 - 2015&quot;, caption = &quot;Data from ARMAAG - modified (jittered)&quot;, x = &quot;MIESIĄC&quot;, y = &quot;PM10&quot; ) Edycja elementów wykresu, Stworzymy sobie teraz obiekt definiujacy rozmiary czcionek my_theme = theme(plot.title=element_text(size=25, face=&quot;bold&quot;, color = &quot;red&quot;), plot.subtitle = element_text(size=20, face = &quot;italic&quot;, color = &quot;black&quot;), axis.text.x=element_text(size=15), axis.text.y=element_text(size=15), axis.title.x=element_text(size=20), axis.title.y=element_text(size=20), strip.text = element_text(face=&quot;bold&quot;, size=15, lineheight=5.0)) ggplot(am8d, aes(x = as.factor(MONTH), y = PM10d)) + stat_summary(fun.data = f, geom=&quot;errorbar&quot;, width = 0.3) + stat_summary(fun.data = f, geom=&quot;boxplot&quot;) + # scale_x_discrete(labels=c(&quot;Jan&quot;,&quot;Feb&quot;,&quot;Mar&quot;,&quot;Apr&quot;,&quot;May&quot;,&quot;Jun&quot;,&quot;Jul&quot;,&quot;Aug&quot;,&quot;Sep&quot;,&quot;Oct&quot;,&quot;Nov&quot;,&quot;Dec&quot;))+ labs( title = &quot;Steżenia PM10 na stacji AM8&quot;, subtitle = &quot;2010 - 2015&quot;, caption = &quot;Data from ARMAAG - modified (jittered)&quot;, x = &quot;MIESIĄC&quot;, y = &quot;PM10&quot;) + my_theme 3.5 WYKRES ROZRZUTU Na początek z całości danych ggplot(am8d, aes(x = TEMPmd, y = PM10d)) + geom_point() + labs( title = &quot;PM10 vs TEMP min &quot;, subtitle = &quot;2010-2015&quot;, caption = &quot;Data from ARMAAG - modified (jittered)&quot;, x = &quot;TEMP min&quot;, y = &quot;PM10&quot; ) + theme_bw() Znaczny overplotting - można włączyc przezroczystość punktów ggplot(am8d, aes(x = TEMPmd, y = PM10d)) + geom_point(alpha = 0.3) + labs( title = &quot;PM10 vs TEMP min &quot;, subtitle = &quot;2010-2015&quot;, caption = &quot;Data from ARMAAG - modified (jittered)&quot;, x = &quot;TEMP min&quot;, y = &quot;PM10&quot; ) + theme_bw() Lub zastsować hexbiny ggplot(am8d, aes(x = TEMPmd, y = PM10d)) + geom_hex() + labs( title = &quot;PM10 vs TEMP min &quot;, subtitle = &quot;2010-2015&quot;, caption = &quot;Data from ARMAAG - modified (jittered)&quot;, x = &quot;TEMP min&quot;, y = &quot;PM10&quot; ) + theme_bw() Oczywiście wrzucenie danych do jednego worka nie jest dobrym pomysłem. Rozdzielmy je zatem na miesiące. Można to zrobic na dwa sposoby. Mapując miesiąc na dodatkową zmienną (np. color, shape) ggplot(am8d, aes(x = TEMPmd, y = PM10d, color = MONTH)) + geom_point(alpha = 0.3) + labs( title = &quot;PM10 vs TEMP min &quot;, subtitle = &quot;2010-2015&quot;, caption = &quot;Data from ARMAAG - modified (jittered)&quot;, x = &quot;TEMP min&quot;, y = &quot;PM10&quot;, color = &quot;MIESIĄC&quot; ) + theme_bw() Niestety, R nie wie, że zmienna MONTH jest dyskretna (poniewaz mu nie powiedzieliśmy) więc traktuje ją jako ciągłą (stąd taka a nie inna skala kolorów). Możemy w locie powiedzieć R, żeby ja przekonwertowal (as.factor). ggplot(am8d, aes(x = TEMPmd, y = PM10d, color = as.factor(MONTH) ) ) + geom_point(alpha = 0.3) + labs( title = &quot;PM10 vs TEMP min &quot;, subtitle = &quot;2010-2015&quot;, caption = &quot;Data from ARMAAG - modified (jittered)&quot;, x = &quot;TEMP min&quot;, y = &quot;PM10&quot;, color = &quot;MIESIĄC&quot; ) + theme_bw() Wciąż mało czytelne - podziemy zatem wykres na panele (facet) ggplot(am8d, aes(x = TEMPmd, y = PM10d) ) + geom_point(alpha = 0.3) + labs( title = &quot;PM10 vs TEMP min &quot;, subtitle = &quot;2010-2015&quot;, caption = &quot;Data from ARMAAG - modified (jittered)&quot;, x = &quot;TEMP min&quot;, y = &quot;PM10&quot; ) + theme_bw()+ facet_wrap(~MONTH, ncol = 3) Wymuszone współne skalowanie osi zasadniczo jest dobrym pomysłem, bo ujednolica obraz, jednak w przypadku znacznej zmienności w wartości w czynniku, który determinuje podział na panele zaciemnia to nieco obraz. Zatem - uwolnijmy osie ggplot(am8d, aes(x = TEMPmd, y = PM10d) ) + geom_point(alpha = 0.3) + labs( title = &quot;PM10 vs TEMP min &quot;, subtitle = &quot;2010-2015&quot;, caption = &quot;Data from ARMAAG - modified (jittered)&quot;, x = &quot;TEMP min&quot;, y = &quot;PM10&quot; ) + theme_bw()+ facet_wrap(~MONTH, ncol = 3, scales = &quot;free&quot;) Po cóż sie zatrzymywać, kolejną 1 linią kodu można dorzucić linie regresji (liniowa lub loess) ggplot(am8d, aes(x = TEMPmd, y = PM10d) ) + geom_point(alpha = 0.3) + labs( title = &quot;PM10 vs TEMP min &quot;, subtitle = &quot;2010-2015&quot;, caption = &quot;Data from ARMAAG - modified (jittered)&quot;, x = &quot;TEMP min&quot;, y = &quot;PM10&quot; ) + theme_bw()+ facet_wrap(~MONTH, ncol = 3, scales = &quot;free&quot;) + geom_smooth() ## `geom_smooth()` using method = &#39;loess&#39; ggplot(am8d, aes(x = TEMPmd, y = PM10d) ) + geom_point(alpha = 0.3) + labs( title = &quot;PM10 vs TEMP min &quot;, subtitle = &quot;2010-2015&quot;, caption = &quot;Data from ARMAAG - modified (jittered)&quot;, x = &quot;TEMP min&quot;, y = &quot;PM10&quot; ) + theme_bw()+ facet_wrap(~MONTH, ncol = 3, scales = &quot;free&quot;) + geom_smooth(method = &quot;lm&quot;) ggplot(am8d, aes(x = TEMPmd, y = PM10d) ) + geom_point(alpha = 0.3) + labs( title = &quot;PM10 vs TEMP min &quot;, subtitle = &quot;2010-2015&quot;, caption = &quot;Data from ARMAAG - modified (jittered)&quot;, x = &quot;TEMP min&quot;, y = &quot;PM10&quot; ) + theme_bw()+ facet_wrap(~MONTH, ncol = 3, scales = &quot;free&quot;) + geom_smooth(method = &quot;lm&quot;) + stat_cor(method = &quot;spearman&quot;, #label.x = 3, # label.y = 30, label.x.npc = 0.5, label.y.npc = 1) 3.6 WYKRES LINIOWY UZUPEŁNIĆ A tutaj finalny,nieco bardziej skomplikowany przykład. Załozmy, ze na zestaw przebiegów rocznych dla średnich dobowych(wieloletnich) chcemy nałożyć wykres z przebiegiem średnich dobowych oraz kwantyliz określonego roku p am8 %&gt;% mutate(DAYy = lubridate::yday(DATE)) %&gt;% group_by(DAYy)%&gt;% summarize(PM10m = mean(PM10, na.rm = T)) -&gt; pm10d am8 %&gt;% mutate(DAYy = lubridate::yday(DATE)) %&gt;% group_by(DAYy)%&gt;% summarize(TEMPd = mean(TEMP, na.rm = T)) -&gt; tempd am8 %&gt;% dplyr::mutate(DAYy = lubridate::yday(DATE)) %&gt;% group_by(DATE)%&gt;% summarize(PM10d = mean(PM10, na.rm = T), TEMPd = mean(TEMP, na.rm = T), VELd = mean(VEL, na.rm = T)) %&gt;% mutate(YEAR = lubridate::year(DATE), MONTH = lubridate::month(DATE), DAYy = lubridate::yday(DATE)) -&gt; pm10y ggplot(pm10y, aes(x = DAYy, y = PM10d, group = YEAR))+ geom_line(alpha = 0.2) + geom_line(data = pm10d, aes(x = DAYy, y = PM10m, group = &quot;&quot;), color = &quot;red&quot;, size = 1) + geom_hline(yintercept = 50, col = 2, size = 0.5) + theme_bw() + labs( title = &quot;Przebieg stężeń PM10 na stacji AM8&quot;, subtitle = &quot;2005 - 2015&quot;, caption = &quot;Data from ARMAAG - modified (jittered)&quot;, x = &quot;KOLEJNY DZIEŃ ROKU&quot;, y = &quot;PM10&quot; ) ggplot(pm10y, aes(x = DAYy, y = TEMPd, group = YEAR))+ geom_line(alpha = 0.2) + geom_line(data = tempd, aes(x = DAYy, y = TEMPd, group = &quot;&quot;), color = &quot;red&quot;, size = 1) + theme_bw() + labs( title = &quot;PRZEBIEG TEMPERATURY POWIETRZA NA STACJI AM8&quot;, subtitle = &quot;2005 - 2015&quot;, caption = &quot;Data from ARMAAG - modified (jittered)&quot;, x = &quot;KOLEJNY DZIEŃ ROKU&quot;, y = &quot;TEMPERATURA POWETRZA&quot; ) 3.7 ZAPISYWANIE ggsave(&quot;plot.pdf&quot;, width = 16, height = 10, dpi = 150) ggsave(“plot.jpg”, width = 16, height = 10, dpi = 150) "]
]
